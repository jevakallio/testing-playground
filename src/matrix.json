[
  {
    "testFilePath": "/Users/swanson/dev/jest-matrix/test/react-observer.test.tsx",
    "testFileName": "react-observer.test.tsx",
    "testCases": [
      {
        "title": "clicking the button changes html",
        "index": 0,
        "events": [
          {
            "event": {
              "type": "Query",
              "html": "<div><main><h1>Simplest Possible App</h1><button>Click</button><input data-testid=\"item-type\" type=\"text\"><section><h2 data-testid=\"counter\">0 items</h2><ul></ul></section></main></div>",
              "method": "getByTestId",
              "args": [
                "counter"
              ],
              "result": "found",
              "error": null
            },
            "origin": "    at broadcast (/Users/swanson/dev/jest-matrix/src/observer/observe.ts:25:47)\n    at Object.captureQuery (/Users/swanson/dev/jest-matrix/src/observer/queries/captureQuery.ts:40:3)\n    at MatrixBoundElementProxy (/Users/swanson/dev/jest-matrix/src/observer/queries/boundElementObserver.ts:15:12)\n    at /Users/swanson/dev/jest-matrix/test/react-observer.test.tsx:13:12\n    at Object.<anonymous> (/Users/swanson/dev/jest-matrix/src/observer/jest/testCaseObserver.ts:96:22)\n    at Promise.then.completed (/Users/swanson/dev/jest-matrix/node_modules/jest-circus/build/utils.js:276:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/swanson/dev/jest-matrix/node_modules/jest-circus/build/utils.js:216:10)"
          },
          {
            "event": {
              "type": "Query",
              "html": "<div><main><h1>Simplest Possible App</h1><button>Click</button><input data-testid=\"item-type\" type=\"text\"><section><h2 data-testid=\"counter\">0 items</h2><ul></ul></section></main></div>",
              "method": "getByRole",
              "args": [
                "button"
              ],
              "result": "found",
              "error": null
            },
            "origin": "    at broadcast (/Users/swanson/dev/jest-matrix/src/observer/observe.ts:25:47)\n    at Object.captureQuery (/Users/swanson/dev/jest-matrix/src/observer/queries/captureQuery.ts:40:3)\n    at MatrixBoundElementProxy (/Users/swanson/dev/jest-matrix/src/observer/queries/boundElementObserver.ts:15:12)\n    at /Users/swanson/dev/jest-matrix/test/react-observer.test.tsx:15:16\n    at Object.<anonymous> (/Users/swanson/dev/jest-matrix/src/observer/jest/testCaseObserver.ts:96:22)\n    at Promise.then.completed (/Users/swanson/dev/jest-matrix/node_modules/jest-circus/build/utils.js:276:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/swanson/dev/jest-matrix/node_modules/jest-circus/build/utils.js:216:10)"
          },
          {
            "event": {
              "type": "UserEvent",
              "htmlBefore": "<button>Click</button>",
              "html": "<button>Click</button>",
              "method": "click",
              "args": [
                "<button>Click</button>"
              ],
              "error": null
            },
            "origin": "    at broadcast (/Users/swanson/dev/jest-matrix/src/observer/observe.ts:25:47)\n    at Function.MatrixUserEventProxy [as click] (/Users/swanson/dev/jest-matrix/src/observer/events/userEventObserver.ts:19:5)\n    at /Users/swanson/dev/jest-matrix/test/react-observer.test.tsx:15:10\n    at Object.<anonymous> (/Users/swanson/dev/jest-matrix/src/observer/jest/testCaseObserver.ts:96:22)\n    at Promise.then.completed (/Users/swanson/dev/jest-matrix/node_modules/jest-circus/build/utils.js:276:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/swanson/dev/jest-matrix/node_modules/jest-circus/build/utils.js:216:10)\n    at _callCircusTest (/Users/swanson/dev/jest-matrix/node_modules/jest-circus/build/run.js:212:40)"
          },
          {
            "event": {
              "type": "Query",
              "html": "<div><main><h1>Simplest Possible App</h1><button>Click</button><input data-testid=\"item-type\" type=\"text\"><section><h2 data-testid=\"counter\">1 items</h2><ul><li>item #0</li></ul></section></main></div>",
              "method": "getByTestId",
              "args": [
                "counter"
              ],
              "result": "found",
              "error": null
            },
            "origin": "    at broadcast (/Users/swanson/dev/jest-matrix/src/observer/observe.ts:25:47)\n    at Object.captureQuery (/Users/swanson/dev/jest-matrix/src/observer/queries/captureQuery.ts:40:3)\n    at MatrixBoundElementProxy (/Users/swanson/dev/jest-matrix/src/observer/queries/boundElementObserver.ts:15:12)\n    at /Users/swanson/dev/jest-matrix/test/react-observer.test.tsx:16:12\n    at Object.<anonymous> (/Users/swanson/dev/jest-matrix/src/observer/jest/testCaseObserver.ts:96:22)\n    at Promise.then.completed (/Users/swanson/dev/jest-matrix/node_modules/jest-circus/build/utils.js:276:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/swanson/dev/jest-matrix/node_modules/jest-circus/build/utils.js:216:10)"
          }
        ],
        "result": {
          "ancestorTitles": [
            "react"
          ],
          "duration": 83,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "react clicking the button changes html",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "clicking the button changes html"
        }
      },
      {
        "title": "setting text input changes html",
        "index": 1,
        "events": [
          {
            "event": {
              "type": "Query",
              "html": "<div><main><h1>Simplest Possible App</h1><button>Click</button><input data-testid=\"item-type\" type=\"text\"><section><h2 data-testid=\"counter\">0 items</h2><ul></ul></section></main></div>",
              "method": "getByTestId",
              "args": [
                "counter"
              ],
              "result": "found",
              "error": null
            },
            "origin": "    at broadcast (/Users/swanson/dev/jest-matrix/src/observer/observe.ts:25:47)\n    at Object.captureQuery (/Users/swanson/dev/jest-matrix/src/observer/queries/captureQuery.ts:40:3)\n    at MatrixBoundElementProxy (/Users/swanson/dev/jest-matrix/src/observer/queries/boundElementObserver.ts:15:12)\n    at /Users/swanson/dev/jest-matrix/test/react-observer.test.tsx:21:12\n    at Object.<anonymous> (/Users/swanson/dev/jest-matrix/src/observer/jest/testCaseObserver.ts:96:22)\n    at Promise.then.completed (/Users/swanson/dev/jest-matrix/node_modules/jest-circus/build/utils.js:276:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/swanson/dev/jest-matrix/node_modules/jest-circus/build/utils.js:216:10)"
          }
        ],
        "result": {
          "ancestorTitles": [
            "react"
          ],
          "duration": 6,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "react setting text input changes html",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "setting text input changes html"
        }
      }
    ]
  },
  {
    "testFilePath": "/Users/swanson/dev/jest-matrix/test/dom-observer.test.ts",
    "testFileName": "dom-observer.test.ts",
    "testCases": [
      {
        "title": "works",
        "index": 0,
        "events": [
          {
            "event": {
              "type": "Query",
              "html": "<form>\n    <label for=\"username\">Username</label>\n    <input data-testid=\"username\" id=\"username\">\n    <button>Print Username</button>\n  </form>",
              "method": "findByLabelText",
              "args": [
                "Username"
              ],
              "result": "found",
              "error": null
            },
            "origin": "    at broadcast (/Users/swanson/dev/jest-matrix/src/observer/observe.ts:25:47)\n    at /Users/swanson/dev/jest-matrix/src/observer/queries/captureQuery.ts:28:11"
          },
          {
            "event": {
              "type": "UserEvent",
              "htmlBefore": "<input data-testid=\"username\" id=\"username\">",
              "html": "<input data-testid=\"username\" id=\"username\">",
              "method": "type",
              "args": [
                "<input data-testid=\"username\" id=\"username\">",
                "Hello, World!"
              ],
              "error": null
            },
            "origin": "    at broadcast (/Users/swanson/dev/jest-matrix/src/observer/observe.ts:25:47)\n    at Object.MatrixUserEventProxy [as type] (/Users/swanson/dev/jest-matrix/src/observer/events/userEventObserver.ts:19:5)\n    at /Users/swanson/dev/jest-matrix/test/dom-observer.test.ts:24:15\n    at step (/Users/swanson/dev/jest-matrix/node_modules/tslib/tslib.js:143:27)\n    at Object.next (/Users/swanson/dev/jest-matrix/node_modules/tslib/tslib.js:124:57)\n    at fulfilled (/Users/swanson/dev/jest-matrix/node_modules/tslib/tslib.js:114:62)"
          },
          {
            "event": {
              "type": "Query",
              "html": "<form>\n    <label for=\"username\">Username</label>\n    <input data-testid=\"username\" id=\"username\">\n    <button>Print Username</button>\n  </form>",
              "method": "getByTestId",
              "args": [
                "username"
              ],
              "result": "found",
              "error": null
            },
            "origin": "    at broadcast (/Users/swanson/dev/jest-matrix/src/observer/observe.ts:25:47)\n    at Object.captureQuery (/Users/swanson/dev/jest-matrix/src/observer/queries/captureQuery.ts:40:3)\n    at MatrixScreenProxy (/Users/swanson/dev/jest-matrix/src/observer/queries/screenObserver.ts:17:12)\n    at /Users/swanson/dev/jest-matrix/test/dom-observer.test.ts:26:15\n    at step (/Users/swanson/dev/jest-matrix/node_modules/tslib/tslib.js:143:27)\n    at Object.next (/Users/swanson/dev/jest-matrix/node_modules/tslib/tslib.js:124:57)\n    at fulfilled (/Users/swanson/dev/jest-matrix/node_modules/tslib/tslib.js:114:62)"
          },
          {
            "event": {
              "type": "Query",
              "html": "<form>\n    <label for=\"username\">Username</label>\n    <input data-testid=\"username\" id=\"username\">\n    <button>Print Username</button>\n  </form>",
              "method": "getByText",
              "args": [
                "Print Username"
              ],
              "result": "found",
              "error": null
            },
            "origin": "    at broadcast (/Users/swanson/dev/jest-matrix/src/observer/observe.ts:25:47)\n    at Object.captureQuery (/Users/swanson/dev/jest-matrix/src/observer/queries/captureQuery.ts:40:3)\n    at MatrixScreenProxy (/Users/swanson/dev/jest-matrix/src/observer/queries/screenObserver.ts:17:12)\n    at /Users/swanson/dev/jest-matrix/test/dom-observer.test.ts:28:20\n    at step (/Users/swanson/dev/jest-matrix/node_modules/tslib/tslib.js:143:27)\n    at Object.next (/Users/swanson/dev/jest-matrix/node_modules/tslib/tslib.js:124:57)\n    at fulfilled (/Users/swanson/dev/jest-matrix/node_modules/tslib/tslib.js:114:62)"
          }
        ],
        "result": {
          "ancestorTitles": [
            "observe"
          ],
          "duration": 19,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "observe works",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "works"
        }
      }
    ]
  }
]